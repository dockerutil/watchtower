name: Push to main

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - uses: dominikh/staticcheck-action@v1.3.1 #fe1dd0c3658873b46f8c9bb3291096a617310ca6
        with:
          version: "latest"
          install-go: "false" # StaticCheck uses go v1.17 which does not support `any`
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Build
        run: ./build.sh
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Test
        run: go test -v -coverprofile coverage.out -covermode atomic ./... 
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  publish:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.x
    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: watchtower
        tags: latest-dev
        containerfiles: |
          ./dockerfiles/Dockerfile.self-contained
    
    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
        password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
        registry: quay.io/dockerutil
    - name: Log in to GHCR.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ github.actor }}
        password: ${{ github.token }}
        registry: ghcr.io/dockerutil
    - name: Log in to docker hub
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.HUB_REGISTRY_USERNAME }}
        password: ${{ secrets.HUB_REGISTRY_PASSWORD }}
        registry: docker.io/cremator

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/dockerutil

    - name: Print quay image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Push To GHCR.io
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ghcr.io/dockerutil

    - name: Print ghcr image url
      run: echo "Image pushed to ${{ steps.push-to-ghcr.outputs.registry-paths }}"

    - name: Push To docker hub
      id: push-to-hub
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: docker.io/cremator

    - name: Print hub image url
      run: echo "Image pushed to ${{ steps.push-to-hub.outputs.registry-paths }}"