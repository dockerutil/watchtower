name: Push to main

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Build
        run: ./build.sh
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Test
        run: go test -v -coverprofile coverage.out -covermode atomic ./... 
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  publish:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.24.x
    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
        password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
        registry: quay.io/dockerutil
    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: watchtower
        tags: latest-dev
        containerfiles: |
          ./dockerfiles/Dockerfile.self-contained

    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/dockerutil

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Push To GHCR
      uses: ./
      id: push-to-ghcr
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ghcr.io/dockerutil
        username: ${{ github.actor }}
        password: ${{ github.token }}
        extra-args: |
          --disable-content-trust
          --label org.opencontainers.image.source=${{ github.event.repository.clone_url }}

    - name: Echo outputs
      run: |
        echo "${{ toJSON(steps.push-to-ghcr.outputs) }}"