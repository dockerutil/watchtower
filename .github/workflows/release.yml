name: Release (Production)

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '**/v[0-9]+.[0-9]+.[0-9]+'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - uses: dominikh/staticcheck-action@v1.3.1 #fe1dd0c3658873b46f8c9bb3291096a617310ca6
        with:
          version: "latest"
          install-go: "false" # StaticCheck uses go v1.17 which does not support `any`

  test:
    name: Test
    strategy:
      matrix:
        go-version:
          - 1.24.x
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      - name: Run tests
        run: |
          go test ./... -coverprofile coverage.out

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: 
      - test
      - lint
    env:
      CGO_ENABLED: 0
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.x
      
      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.QUAY_REGISTRY_USERNAME }}
          password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}
          registry: quay.io/dockerutil
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io/dockerutil
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HUB_REGISTRY_USERNAME }}
          password: ${{ secrets.HUB_REGISTRY_PASSWORD }}
          registry: docker.io
      - name: Build
        uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 #v3
        with:
          version: v0.155.0
          args: --debug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest for version
        run: |
          export DH_TAG=$(git tag --points-at HEAD | sed 's/^v*//')
          docker manifest create \
            cremator/watchtower:$DH_TAG \
            cremator/watchtower:amd64-$DH_TAG \
            cremator/watchtower:i386-$DH_TAG \
            cremator/watchtower:armhf-$DH_TAG \
            cremator/watchtower:arm64v8-$DH_TAG
          docker manifest create \
            ghcr.io/dockerutil/watchtower:$DH_TAG \
            ghcr.io/dockerutil/watchtower:amd64-$DH_TAG \
            ghcr.io/dockerutil/watchtower:i386-$DH_TAG \
            ghcr.io/dockerutil/watchtower:armhf-$DH_TAG \
            ghcr.io/dockerutil/watchtower:arm64v8-$DH_TAG
          docker manifest create \
            quay.io/dockerutil/watchtower:$DH_TAG \
            quay.io/dockerutil/watchtower:amd64-$DH_TAG \
            quay.io/dockerutil/watchtower:i386-$DH_TAG \
            quay.io/dockerutil/watchtower:armhf-$DH_TAG \
            quay.io/dockerutil/watchtower:arm64v8-$DH_TAG
      - name: Annotate manifest for version
        run: |
          for REPO in cremator/ ghcr.io/dockerutil/ quay.io/dockerutil/; do
          
          docker manifest annotate \
            ${REPO}watchtower:$(echo $TAG | sed 's/^v*//') \
            ${REPO}watchtower:i386-$(echo $TAG | sed 's/^v*//') \
            --os linux \
            --arch 386
          
          docker manifest annotate \
            ${REPO}watchtower:$(echo $TAG | sed 's/^v*//') \
            ${REPO}watchtower:armhf-$(echo $TAG | sed 's/^v*//') \
            --os linux \
            --arch arm
      
          docker manifest annotate \
            ${REPO}watchtower:$(echo $TAG | sed 's/^v*//') \
            ${REPO}watchtower:arm64v8-$(echo $TAG | sed 's/^v*//') \
            --os linux \
            --arch arm64 \
            --variant v8
            
            done
      - name: Create manifest for latest
        run: |
          docker manifest create \
            cremator/watchtower:latest \
            cremator/watchtower:amd64-latest \
            cremator/watchtower:i386-latest \
            cremator/watchtower:armhf-latest \
            cremator/watchtower:arm64v8-latest
          docker manifest create \
            ghcr.io/dockerutil/watchtower:latest \
            ghcr.io/dockerutil/watchtower:amd64-latest \
            ghcr.io/dockerutil/watchtower:i386-latest \
            ghcr.io/dockerutil/watchtower:armhf-latest \
            ghcr.io/dockerutil/watchtower:arm64v8-latest
          docker manifest create \
            quay.io/dockerutil/watchtower:latest \
            quay.io/dockerutil/watchtower:amd64-latest \
            quay.io/dockerutil/watchtower:i386-latest \
            quay.io/dockerutil/watchtower:armhf-latest \
            quay.io/dockerutil/watchtower:arm64v8-latest
      - name: Annotate manifest for latest
        run: |
          for REPO in cremator/ ghcr.io/dockerutil/ quay.io/dockerutil/ ; do

          docker manifest annotate \
            ${REPO}watchtower:latest \
            ${REPO}watchtower:i386-latest \
            --os linux \
            --arch 386
      
          docker manifest annotate \
            ${REPO}watchtower:latest \
            ${REPO}watchtower:armhf-latest \
            --os linux \
            --arch arm
            
          docker manifest annotate \
            ${REPO}watchtower:latest \
            ${REPO}watchtower:arm64v8-latest \
            --os linux \
            --arch arm64 \
            --variant v8

          done
      - name: Push manifests to Dockerhub
        run: |
            docker manifest push cremator/watchtower:$(echo $TAG | sed 's/^v*//') && \
            docker manifest push cremator/watchtower:latest
      - name: Push manifests to GitHub Container Registry
        run: |
            docker manifest push ghcr.io/dockerutil/watchtower:$(echo $TAG | sed 's/^v*//') && \
            docker manifest push ghcr.io/dockerutil/watchtower:latest
      - name: Push manifests to quay.io Container Registry
        run: |
            docker manifest push quay.io/dockerutil/watchtower:$(echo $TAG | sed 's/^v*//') && \
            docker manifest push quay.io/dockerutil/watchtower:latest

  renew-docs:
    name: Refresh pkg.go.dev
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Pull new module version
      uses: andrewslotin/go-proxy-pull-action@50fea06a976087614babb9508e5c528b464f4645 #master@2022-10-14

  
  

  
